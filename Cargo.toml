[package]
name = "kwavers"
version = "2.14.0"
edition = "2021"
authors = ["Kwavers Team <team@kwavers.org>"]
description = "Ultrasound Simulation Toolbox with Cavitation and Light Physics"
license = "MIT"
repository = "https://github.com/kwavers/kwavers"
keywords = ["ultrasound", "simulation", "physics", "cavitation", "sonoluminescence", "medical-imaging"]
categories = ["science", "simulation", "medical"]

[dependencies]
# CORE PRODUCTION DEPENDENCIES ONLY
# Following minimalist production architecture per ADR-011

# Essential numerical computing
ndarray = { version = "0.16", features = ["rayon"] }
rayon = "1.10"
rustfft = "6.2"
num-complex = "0.4"
num-traits = "0.2"

# Error handling (production critical)
thiserror = "1.0"
anyhow = "1.0"

# Serialization (minimal)
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"

# Unit safety
uom = { version = "0.36", default-features = false, features = ["f64", "si", "std"] }

# Linear algebra
nalgebra = { version = "0.32" }

# Essential utilities
log = "0.4"
env_logger = "0.11"
rand = "0.8"
rand_distr = "0.4"
rand_chacha = "0.3"
lazy_static = "1.4"
regex = "1.8"
nifti = "0.17.0"

# Concurrency
parking_lot = "0.12"
once_cell = "1.19"
crossbeam = "0.8"

# Testing utilities (minimal)
approx = "0.5"

# CONDITIONAL FEATURES (disabled by default)
# GPU acceleration (optional)
wgpu = { version = "22.0", features = ["wgsl"], optional = true }
bytemuck = { version = "1.19", features = ["derive"], optional = true }
pollster = { version = "0.4", optional = true }

# Visualization (optional)
plotly = { version = "0.8", optional = true }

[dev-dependencies]
# Minimal dev dependencies for testing only
criterion = "0.4"
proptest = "1.2"

[features]
default = ["minimal"]  # PRODUCTION DEFAULT
minimal = []           # Core functionality only
parallel = ["ndarray/rayon"] # Add back parallel feature
gpu = ["dep:wgpu", "dep:bytemuck", "dep:pollster"]
plotting = ["dep:plotly"] 
# Additional features referenced in code
nifti = []             # Medical imaging support
nightly = []           # Nightly Rust features
advanced-visualization = ["plotting"] # Advanced visualization features
web-visualization = ["plotting"]      # Web-based visualization
vr-support = []        # VR headset support (future)
full = ["gpu", "plotting", "parallel", "nifti", "advanced-visualization"]

[profile.dev]
# Fast development builds
opt-level = 0
debug = true
split-debuginfo = "unpacked"
codegen-units = 256

[profile.release]
# Optimized for performance
opt-level = 3
lto = "thin"
codegen-units = 1
panic = "abort"

[profile.test]
# SRS NFR-002 compliant: optimize for fast compilation (<30s total)
opt-level = 0          # Minimize optimization time
debug = false          # Reduce binary size and compilation time
codegen-units = 256    # Maximize parallelization
incremental = true     # Enable incremental compilation
debug-assertions = false # Skip expensive debug checks

# SRS NFR-002 Compliant Test Configuration
# Fast unit tests - <30s execution for CI/CD
[[test]]
name = "integration_test"
harness = true
required-features = []  # Minimal dependencies

# Optional slow tests - separate execution
[[test]]  
name = "validation_suite"
harness = true
required-features = ["full"]  # Full validation requires all features

[[test]]
name = "literature_validation" 
harness = true
required-features = ["full"]  # Literature benchmarks need full setup

[lib]
test = true